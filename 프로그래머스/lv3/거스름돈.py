def solution(n,m):
    d = [1] + [0]*n

    for j in m:
        for i in range(n+1):
            if i - j >= 0:
                d[i] += d[i-j]
    return d[-1]


# dp 문제 
# 점화식 d[i] += d[i-j]
# j == 현재 check 하고 있는 금액, i == 만들어야하는 금액

# ex) m = [2,3] n =12 일때, 3(j)원으로 12(i)원을 구성하는 방법을 계산하는법
# 3원으로 9원을 만들 수 있는 모든 경우의 수(d[12-3]) +  3원을 쓰지않고 지금까지 12원을 만들 수 있는 모든 경우의 수(d[12]) 
# d[9] => [2,2,2,3],[3,3,3] / d[12] => [2,2,2,2,2,2] 총 3가지
# 2,3원으로 12원으로 구성하는 방법 
# d[12] => [2,2,2,3,3],[3,3,3,3],[2,2,2,2,2,2]